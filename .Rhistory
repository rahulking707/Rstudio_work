# Print the results
c("Mean:", mean_value )
c("Variance:",variance_value)
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 4 gears is different from 6 gears
prop_test_result <- prop.test(table(mtcars$gear))
print(prop_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 4 gears is different from 6 gears
prop_test_result <- prop.test(table(mtcars$gear))
print(prop_test_result)
# Practical 1
# Data Set
x <- c(20, 21, 01, 124 ,98,98)
qx <- c(0.100, 0.182, 0.233, 0.232,0.341,0.781)
# Calculate mean and variance
mean_value <- sum(x * qx)
variance_value <- sum((x - mean_value)^2 * qx)
# Print the results
c("Mean:", mean_value )
c("Variance:",variance_value)
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 4 gears is different from 6 gears
prop_test_result <- prop.test(table(mtcars$gear))
print(prop_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 3 gears is different from 4 gears
prop_test_result <- prop.test(table(mtcars$gear %in% c(3, 4)))
print(prop_test_result)
# Practical 1
# Data Set
x <- c(20, 21, 01, 124 ,98,98)
qx <- c(0.100, 0.182, 0.233, 0.232,0.341,0.781)
# Calculate mean and variance
mean_value <- sum(x * qx)
variance_value <- sum((x - mean_value)^2 * qx)
# Print the results
c("Mean:", mean_value )
c("Variance:",variance_value)
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 3 gears is different from 4 gears
prop_test_result <- prop.test(table(mtcars$gear %in% c(3, 4)))
print(prop_test_result)
# Practical 1
# Data Set
x <- c(20, 21, 01, 124 ,98,98)
qx <- c(0.100, 0.182, 0.233, 0.232,0.341,0.781)
# Calculate mean and variance
mean_value <- sum(x * qx)
variance_value <- sum((x - mean_value)^2 * qx)
# Print the results
c("Mean:", mean_value )
c("Variance:",variance_value)
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 4 gears is different from 6 gears
prop_test_result <- prop.test(table(mtcars$gear))
print(prop_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 3 gears is different from 4 gears
prop_test_result <- prop.test(table(mtcars$gear %in% c(3, 4)))
print(prop_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 4 gears is different from 6 gears
prop_test_result <- prop.test(table(mtcars$gear))
print(prop_test_result)
# Practical 1
# Data Set
x <- c(20, 21, 01, 124 ,98,98)
qx <- c(0.100, 0.182, 0.233, 0.232,0.341,0.781)
# Calculate mean and variance
mean_value <- sum(x * qx)
variance_value <- sum((x - mean_value)^2 * qx)
# Print the results
c("Mean:", mean_value )
c("Variance:",variance_value)
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$y, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 3 gears is different from 4 gears
prop_test_result <- prop.test(table(mtcars$gear %in% c(3, 4)))
print(prop_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
# Practical 1
# Data Set
x <- c(20, 21, 01, 124 ,98,98)
qx <- c(0.100, 0.182, 0.233, 0.232,0.341,0.781)
# Calculate mean and variance
mean_value <- sum(x * qx)
variance_value <- sum((x - mean_value)^2 * qx)
# Print the results
print(c("Mean:", mean_value))
print(c("Variance:", variance_value))
# Load the dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Data visualization - Boxplot
boxplot(mtcars$mpg, main="Boxplot of MPG", ylab="Miles Per Gallon")
# Perform a t-test
# For example, let's test if there is a significant difference in mpg between automatic and manual transmission cars
t_test_result <- t.test(mtcars$mpg ~ mtcars$am)
print(t_test_result)
# Perform a proportion test
# For example, let's test if the proportion of cars with 3 gears is different from 4 gears
prop_test_result <- prop.test(table(mtcars$gear %in% c(3, 4)))
print(prop_test_result)
# Perform ANOVA
# For example, let's perform a one-way ANOVA to test if there's a significant difference in mpg between different levels of the "cyl" variable
anova_result <- aov(mpg ~ cyl, data = mtcars)
summary(anova_result)
boxplot(Sepal.Length ~ Species, data = iris, xlab = "Species", ylab = "Sepal Length", main = "Boxplot")
x<-c(1,2,3,4,5,6)
px<-c(0.1,0.2,0.3,0.4,0.5,0.6)
pb<-c(x*px)
sum(pb)
mean(pb)
var(pb)
sd(pb)
data("airquality")
summary(airquality)
mean(airquality$Month)
median(airquality$Month)
airquality$Solar.R
mean(airquality$Month)
mean(airquality$Month)
median(airquality$Month)
v1<-c(1,2,3,5)
v2<-c(10,12,13,14)
plot(v1,v2)
plot(airquality$Temp,airquality$Month)
plot(airquality$Temp,airquality$Month,main="Scatter Plot",xlab="Temperature",ylab="Month",col="navy")
barplot(airquality$Solar.R)
boxplot(airquality$Ozone~airquality$Month)
head(airquality)
t.test(Ozone~1,airquality,mu=45)
x<-c(1,2,3,4,5,6)
px<-c(1/6,1/6,1/6,1/6,1/6,1/6)
sum(px)
x<-c(0,1,2,3)
x<-c(20,21,01,124,98,98)
px<-c(0.100,0.182,0.233,0.232,0.341,0.781)
pb<-c(x*px)
sum(pb)
mean(pb)
var(pb)
sd(pb)
data("airquality")
summary(airquality)
mean(airquality$Month)
median(airquality$Month)
airquality$Solar.R
mean(airquality$Month)
mean(airquality$Month)
median(airquality$Month)
v1<-c(1,2,3,5)
v2<-c(10,12,13,14)
plot(v1,v2)
plot(airquality$Temp,airquality$Month)
plot(airquality$Temp,airquality$Month,main="Scatter Plot",xlab="Temperature",ylab="Month",col="navy")
barplot(airquality$Solar.R)
boxplot(airquality$Ozone~airquality$Month)
head(airquality)
t.test(Ozone~1,airquality,mu=45)
x<-c(1,2,3,4,5,6)
px<-c(1/6,1/6,1/6,1/6,1/6,1/6)
sum(px)
x<-c(0,1,2,3)
px<-c(0.10,0.15,0.20,0.55)
sum(px)
m<-x*px
mu<-sum(m)
mu
data.frame(x,px,m)
v<-(x-mu)^2*px
variance<-sum(v)
variance
mean<-c(mu/6)
mean(mu)
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
average <- mean(weighted_values)
variance <- var(weighted_values)
std_dev <- sd(weighted_values)
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
mean_month <- mean(airquality$Month)
median_month <- median(airquality$Month)
# Creating a scatter plot of two vectors
vector1 <- c(1, 2, 3, 5)
vector2 <- c(10, 12, 13, 14)
scatter_plot <- plot(vector1, vector2)
# Creating a customized scatter plot with labels and colors
custom_scatter_plot <- plot(
airquality$Temp,
airquality$Month,
main = "Temperature vs. Month",
xlab = "Temperature",
ylab = "Month",
col = "navy"
)
# Creating a bar plot for the Solar.R variable in airquality
solar_r_barplot <- barplot(airquality$Solar.R)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Displaying the first few rows of the airquality dataset
first_rows <- head(airquality)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
# Defining a probability distribution with values and probabilities
custom_x <- c(0, 1, 2, 3)
custom_px <- c(0.10, 0.15, 0.20, 0.55)
# Calculating the mean and variance of the distribution
custom_mean <- sum(custom_x * custom_px)
custom_variance <- sum((custom_x - custom_mean)^2 * custom_px)
# Displaying the results
result_dataframe <- data.frame(custom_x, custom_px, custom_x * custom_px)
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
average <- mean(weighted_values)
variance <- var(weighted_values)
std_dev <- sd(weighted_values)
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
mean_month <- mean(airquality$Month)
median_month <- median(airquality$Month)
# Creating a scatter plot of two vectors
vector1 <- c(1, 2, 3, 5)
vector2 <- c(10, 12, 13, 14)
scatter_plot <- plot(vector1, vector2)
# Creating a customized scatter plot with labels and colors
custom_scatter_plot <- plot(
airquality$Temp,
airquality$Month,
main = "Temperature vs. Month",
xlab = "Temperature",
ylab = "Month",
col = "navy"
)
# Creating a bar plot for the Solar.R variable in airquality
solar_r_barplot <- barplot(airquality$Solar.R)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Displaying the first few rows of the airquality dataset
first_rows <- head(airquality)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
# Defining a probability distribution with values and probabilities
custom_x <- c(0, 1, 2, 3)
custom_px <- c(0.10, 0.15, 0.20, 0.55)
# Calculating the mean and variance of the distribution
custom_mean <- sum(custom_x * custom_px)
custom_variance <- sum((custom_x - custom_mean)^2 * custom_px)
# Displaying the results
result_dataframe <- data.frame(custom_x, custom_px, custom_x * custom_px)
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
average <- mean(weighted_values)
variance <- var(weighted_values)
std_dev <- sd(weighted_values)
# Exploring the airquality dataset
data("airquality")
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
average <- mean(weighted_values)
variance <- var(weighted_values)
std_dev <- sd(weighted_values)
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
mean_month <- mean(airquality$Month)
median_month <- median(airquality$Month)
# Creating a scatter plot of two vectors
vector1 <- c(1, 2, 3, 5)
vector2 <- c(10, 12, 13, 14)
scatter_plot <- plot(vector1, vector2)
# Creating a customized scatter plot with labels and colors
custom_scatter_plot <- plot(
airquality$Temp,
airquality$Month,
main = "Temperature vs. Month",
xlab = "Temperature",
ylab = "Month",
col = "navy"
)
# Creating a bar plot for the Solar.R variable in airquality
solar_r_barplot <- barplot(airquality$Solar.R)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Displaying the first few rows of the airquality dataset
first_rows <- head(airquality)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
# Defining a probability distribution with values and probabilities
custom_x <- c(0, 1, 2, 3)
custom_px <- c(0.10, 0.15, 0.20, 0.55)
# Calculating the mean and variance of the distribution
custom_mean <- sum(custom_x * custom_px)
custom_variance <- sum((custom_x - custom_mean)^2 * custom_px)
# Displaying the results
result_dataframe <- data.frame(custom_x, custom_px, custom_x * custom_px)
total_sum
average
variance
std_dev
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
total_sum
average <- mean(weighted_values)
average
variance <- var(weighted_values)
variance
std_dev <- sd(weighted_values)
std_dev
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
mean_month <- mean(airquality$Month)
median_month <- median(airquality$Month)
# Creating a scatter plot of two vectors
vector1 <- c(1, 2, 3, 5)
vector2 <- c(10, 12, 13, 14)
scatter_plot <- plot(vector1, vector2)
# Creating a customized scatter plot with labels and colors
custom_scatter_plot <- plot(
airquality$Temp,
airquality$Month,
main = "Temperature vs. Month",
xlab = "Temperature",
ylab = "Month",
col = "navy"
)
# Creating a bar plot for the Solar.R variable in airquality
solar_r_barplot <- barplot(airquality$Solar.R)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Displaying the first few rows of the airquality dataset
first_rows <- head(airquality)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
# Defining a probability distribution with values and probabilities
custom_x <- c(0, 1, 2, 3)
custom_px <- c(0.10, 0.15, 0.20, 0.55)
# Calculating the mean and variance of the distribution
custom_mean <- sum(custom_x * custom_px)
custom_variance <- sum((custom_x - custom_mean)^2 * custom_px)
# Displaying the results
result_dataframe <- data.frame(custom_x, custom_px, custom_x * custom_px)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
weighted_values
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Generating a numeric vector x with arbitrary values
values <- c(20, 21, 01, 124, 98, 98)
# Defining probabilities in vector px
probabilities <- c(0.100, 0.182, 0.233, 0.232, 0.341, 0.781)
# Calculating the product of x and px
weighted_values <- c(values * probabilities)
weighted_values
# Displaying the sum, mean, variance, and standard deviation of the weighted values
total_sum <- sum(weighted_values)
total_sum
average <- mean(weighted_values)
average
variance <- var(weighted_values)
variance
std_dev <- sd(weighted_values)
std_dev
# Exploring the airquality dataset
data("airquality")
air_quality_summary <- summary(airquality)
mean_month <- mean(airquality$Month)
median_month <- median(airquality$Month)
# Creating a scatter plot of two vectors
vector1 <- c(1, 2, 3, 5)
vector2 <- c(10, 12, 13, 14)
scatter_plot <- plot(vector1, vector2)
# Creating a customized scatter plot with labels and colors
custom_scatter_plot <- plot(
airquality$Temp,
airquality$Month,
main = "Temperature vs. Month",
xlab = "Temperature",
ylab = "Month",
col = "navy"
)
# Creating a bar plot for the Solar.R variable in airquality
solar_r_barplot <- barplot(airquality$Solar.R)
# Creating a box plot for the relationship between Ozone and Month
box_plot <- boxplot(airquality$Ozone ~ airquality$Month)
# Displaying the first few rows of the airquality dataset
first_rows <- head(airquality)
# Performing a t-test on the Ozone variable in airquality
t_test_result <- t.test(Ozone ~ 1, airquality, mu = 45)
# Defining a probability distribution with values and probabilities
custom_x <- c(0, 1, 2, 3)
custom_px <- c(0.10, 0.15, 0.20, 0.55)
# Calculating the mean and variance of the distribution
custom_mean <- sum(custom_x * custom_px)
custom_variance <- sum((custom_x - custom_mean)^2 * custom_px)
# Displaying the results
result_dataframe <- data.frame(custom_x, custom_px, custom_x * custom_px)
